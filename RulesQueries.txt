# ?s p o
#All subjects, predicate and objects fixed w.r.t input subject
#get properties and count having same values in all subjects

SELECT ?p ?freq WHERE {
    {SELECT ?s ?p (COUNT(?o) AS ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        } .
        FILTER (?p = ?pred && ?o = ?obj) {
            SELECT ?pred ?obj WHERE { <http://dbpedia.org/resource/Albert_Einstein> ?pred ?obj }
        }
    }
    GROUP BY ?s ?p}
    FILTER (?s = <http://dbpedia.org/resource/Albert_Einstein>)
} 
GROUP BY ?p ?freq
ORDER BY DESC(?freq)

REVISED RULE 1 (SUBJECT PROPERTIES INTERSECTION):

SELECT distinct ?p ?freq WHERE {
    {SELECT distinct ?p (count(?o) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        } .
    } group by ?p }
} 
group by ?p
order by desc(?freq)

# Granular property freq count comparision with respect to diff subjects of same category
# Query 1 extension
SELECT ?o (count(?o) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        } .
        FILTER (?p = <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
    }
group by ?o
order by desc(?freq)

*****************************************************************************************************************************************


SELECT ?p ?freq WHERE {
    {SELECT ?o ?p (COUNT(?s) AS ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?o = ?obj) {
            SELECT ?obj WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/award> ?obj }
        } .
        FILTER (?p = ?pred && ?s = ?sub) {
            SELECT ?sub ?pred WHERE { ?sub ?pred <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        }
    }
    GROUP BY ?p ?o}
    FILTER (?o = <http://dbpedia.org/resource/Nobel_Prize_in_Physics>)
}
GROUP BY ?p ?freq
ORDER BY DESC(?freq)

RULE 2 REVISED (OBJECT PROPERTIES INTERSECTION):

SELECT distinct ?p ?freq WHERE {
    {SELECT distinct ?p (count(?s) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?obj) {
            SELECT ?obj WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/award> ?obj }
        } .
    } group by ?p }
} 
group by ?p ?freq
order by desc(?freq)

# Granular property freq count comparision with respect to diff objects of same category
# Query 2 extension
SELECT ?o (count(?o) as ?freq) WHERE {
?subj <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?o .
filter (?subj = ?obj) {
SELECT ?obj WHERE { 
        ?s <http://dbpedia.org/ontology/award> ?obj .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        }
    }
}
} group by ?o
order by desc(?freq)

********************************************************************************************************************

RULE 3:
#?p ?s ?o
SELECT distinct ?p ?freq WHERE {
    {SELECT distinct ?p (count(?o) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> ?obj }
        } .
    } group by ?p }
} 
group by ?p
order by desc(?freq)

#Granular level:
SELECT ?o (count(?o) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> ?obj }
        } .
        FILTER (?p = <http://www.w3.org/1999/02/22-rdf-syntax-ns#type>)
    }
group by ?o
order by desc(?freq)














********************************************************************************************************************

# s ?p o
SELECT ?o ?freq WHERE {
    {SELECT ?o ?p count(?s) as ?freq WHERE { 
        ?s ?p ?o .
        FILTER (?p = ?pred) {
            SELECT ?pred WHERE { <http://dbpedia.org/resource/Albert_Einstein> ?pred <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        } .
        FILTER (?o = ?obj && ?s = ?sub) {
            SELECT ?sub ?obj WHERE { ?sub <http://dbpedia.org/ontology/award> ?obj }
        }
    }}
    FILTER (?p = <http://dbpedia.org/ontology/award>)
    FILTER (?o = ?ob) {
        SELECT ?ob WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/award> ?ob }
    }
} order by desc(?freq)

------------------------------------------------------------------------

SELECT ?o ?freq WHERE {
    {SELECT ?o ?p (COUNT(?s) AS ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?p = ?pred) {
            SELECT ?pred WHERE { <http://dbpedia.org/resource/Albert_Einstein> ?pred <http://dbpedia.org/resource/Nobel_Prize_in_Physics> }
        } .
        FILTER (?o = ?obj && ?s = ?sub) {
            SELECT ?sub ?obj WHERE { ?sub <http://dbpedia.org/ontology/award> ?obj }
        }
    }
    GROUP BY ?o ?p}
    FILTER (?p = <http://dbpedia.org/ontology/award>)
    FILTER (?o = ?ob) {
        SELECT ?ob WHERE { <http://dbpedia.org/resource/Albert_Einstein> <http://dbpedia.org/ontology/award> ?ob }
    }
}
GROUP BY ?o ?freq
ORDER BY DESC(?freq)

****************************************************************************************************************************





******************************************************************************************************************************

get intersection of properties of different object sharing same subject and subject's predicate

SELECT distinct ?p ?freq WHERE {
    {SELECT distinct ?p count(?s) as ?freq WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?obj) {
            SELECT ?obj WHERE { dbr:Donald_Trump dbo:spouse ?obj }
        } .
    }}
} 
group by ?p
order by desc(?freq)

*****************************************************************************************************************************

give me all the properties of all the subjects that are in common, given that subject are retrieved by input predicate
x spouse y. Give all ?p count of X that are common. where x is an element of X.

SELECT distinct ?p ?freq WHERE {
    {SELECT distinct ?p (count(?o) as ?freq) WHERE { 
        ?s ?p ?o .
        FILTER (?s = ?sub) {
            SELECT ?sub WHERE { ?sub <http://dbpedia.org/ontology/award> ?obj }
        } .
    } group by ?p }
} 
group by ?p
order by desc(?freq)